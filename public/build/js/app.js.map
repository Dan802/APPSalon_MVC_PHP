{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","id","nombre","fecha","hora","servicios","iniciarapp","mostrarseccion","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","nombreCliente","idCliente","seleccionarFecha","seleccionarHora","seccionAnterior","document","querySelector","classList","remove","pasoSelector","add","tabAnterior","querySelectorAll","forEach","boton","addEventListener","e","parseInt","target","dataset","btnSiguiente","btnAnterior","mostrarResumen","async","url","location","origin","resultado","fetch","mostrarServicios","json","error","console","log","servicio","precio","servicioDiv","createElement","idServicio","onclick","seleccionarServicio","nombreServicio","textContent","precioServicio","appendChild","toggle","some","elementoActualenServicios","filter","value","dia","Date","getUTCDay","includes","mostrarAlerta","horaCita","split","mensaje","tipo","elemento","desaparece","alertaPrevia","alerta","setTimeout","obtenerFechaFormateada","fechaOriginal","fechaObj","mes","getMonth","getDate","year","getFullYear","UTC","toLocaleDateString","weekday","month","day","resumen","firstChild","removeChild","Object","values","length","headingServicios","contenedorServicio","textoServicio","innerHTML","headingCita","fechaCita","fechaFormateada","botonReservar","reservarCita","idServicios","map","dataToSendViaPost","FormData","append","response","method","body","Swal","fire","icon","title","text","button","then","window","reload"],"mappings":"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","file":"app.js","sourcesContent":["let paso = 1;\r\nconst pasoInicial = 1;\r\nconst pasoFinal = 3;\r\n\r\n// Los objetos se pueden reescribir a pesar de ser const\r\nconst cita = {  // simil carrito de compras pero para servicios\r\n    id: '', nombre: '', fecha: '', hora: '', servicios: []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarapp();\r\n})\r\n\r\nfunction iniciarapp() {\r\n    mostrarseccion(); // Muestra y oculta el contenido de las secciones\r\n    tabs(); //Cambia la sección cuando se presionen los tabs\r\n    botonesPaginador(); // Agrega o quita los btnes del paginador\r\n    paginaSiguiente(); // btnes paginador\r\n    paginaAnterior(); // btnes paginador\r\n    consultarAPI(); // Consulta la API\r\n\r\n    nombreCliente(); // Añade el nombre del cliente al objeto de cita\r\n    idCliente(); \r\n    seleccionarFecha();\r\n    seleccionarHora();\r\n\r\n    // mostrarResumen(); // Muestra el resumen de la cita\r\n    // siempre se va a llamar en el paginador\r\n}\r\n\r\nfunction mostrarseccion() {\r\n\r\n    // Ocultar la sección que tenga la clase de mostar\r\n    const seccionAnterior = document.querySelector('.mostrar');\r\n    if(seccionAnterior) { //Si existe entonces...\r\n        seccionAnterior.classList.remove('mostrar');\r\n    }\r\n\r\n    // Seleccionar la sección con el paso...\r\n    const pasoSelector = `#paso-${paso}`;   //Seleccion por Id personalizado\r\n    const seccion = document.querySelector(pasoSelector);\r\n    seccion.classList.add('mostrar'); // Mostrar la sección con el paso indicado\r\n\r\n    // Quita la clase de actual(el resaltado)\r\n    const tabAnterior = document.querySelector('.actual');\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n\r\n    // Resalta el tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\nfunction tabs() {\r\n    // El código aquí solo se ejecuta una vez\r\n    const botones = document.querySelectorAll('.tabs button');\r\n\r\n    // 1. FORMA EFICIENTE de obtener varios botones con la misma clase\r\n    botones.forEach( boton => {\r\n        // El código aquí se ejecuta el numero de elementos dentro del arreglo botones\r\n\r\n        // Le añadimos un addeventlistener a cada boton\r\n        boton.addEventListener('click', function(e) {\r\n            \r\n            paso = parseInt(e.target.dataset.paso); // actualizamos paso = boton clickeado\r\n            mostrarseccion();\r\n            botonesPaginador();\r\n        })\r\n    })\r\n    \r\n    // #region 2. FORMA INEFICIENTE\r\n    /*  \r\n    botones.forEach(nombreFuncion);\r\n\r\n    function nombreFuncion (element) { //el foreach retorna element\r\n        //A cada boton se le asigna un eventlistener\r\n        element.addEventListener('click', function() { \r\n                console.log('diste click');\r\n        });\r\n    }*/\r\n    // #endregion\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    const btnAnterior = document.querySelector('#anterior');\r\n\r\n    if(paso === 1) {\r\n        btnAnterior.classList.add('ocultar');\r\n        btnSiguiente.classList.remove('ocultar');\r\n    } else if( paso === 2) {\r\n        btnAnterior.classList.remove('ocultar');\r\n        btnSiguiente.classList.remove('ocultar');\r\n    } else {\r\n        btnAnterior.classList.remove('ocultar');\r\n        btnSiguiente.classList.add('ocultar');\r\n        mostrarResumen();\r\n    }\r\n\r\n    mostrarseccion();\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n\r\n    btnAnterior.addEventListener('click', function() {\r\n\r\n        if(paso <= pasoInicial) return;\r\n            paso--;\r\n            botonesPaginador();\r\n    })\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n\r\n    btnSiguiente.addEventListener('click', function() {\r\n\r\n        if(paso >= pasoFinal) return;\r\n            paso++;\r\n            botonesPaginador();\r\n    })\r\n}\r\n\r\nasync function consultarAPI() {\r\n\r\n    // try-catch: NO sobresaturar el codigo pues consume mucha memoria, solo en partes críticas\r\n    try {   \r\n        const url = `${location.origin}/api/servicios`;\r\n\r\n        // Await solo funciona con funciones async\r\n        const resultado = await fetch(url); //fetch: Busca la info\r\n\r\n        // Para ejecturar el código siguiente se debe terminar de ejecutar el await\r\n        const servicios = await resultado.json(); \r\n        mostrarServicios(servicios);\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n    \r\n    servicios.forEach( servicio => {\r\n        // servicios forEach retorna por cada servicio un Objeto así \r\n        // {id : \"\", nombre : \"\", precio : \"\"} \r\n        \r\n        // object destructuring to assign its properties to separate variables\r\n        const {id, nombre, precio} = servicio;\r\n\r\n        //Mostrar los Servicios en el UI\r\n            // 1. Creamos el div y los dos p para mostrar los servicios\r\n        const servicioDiv = document.createElement('P');\r\n        servicioDiv.classList.add('servicio');\r\n        servicioDiv.dataset.idServicio = id;        //Atributo personalizada en el html\r\n        servicioDiv.onclick = function() {\r\n            // callback para saber a cual servicio le he dado click\r\n            seleccionarServicio(servicio);\r\n        };\r\n\r\n        const nombreServicio = document.createElement('P');\r\n        nombreServicio.classList.add('nombre-servicio');\r\n        nombreServicio.textContent = nombre;\r\n        \r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.classList.add('precio-servicio');\r\n        precioServicio.textContent = `$${precio}`;\r\n\r\n            // 2. \"encapsulamos\" los p dentro del div\r\n        servicioDiv.appendChild(nombreServicio);\r\n        servicioDiv.appendChild(precioServicio);\r\n\r\n            // 3. Mostrarlos en pantalla\r\n        document.querySelector('#servicios').appendChild(servicioDiv);\r\n    });\r\n}\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    // 1. Añadimos feedback visual al usuario\r\n    const { id } = servicio;    // Id del servicio al que el usuario le dio click\r\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`); // Identificar HTML del elemento al que se le da click\r\n    divServicio.classList.toggle('seleccionado');\r\n    \r\n    // 2. cita esta definido como:\r\n    // const cita = { nombre: '', fecha: '', hora: '', servicios: []}\r\n    \r\n    // 3. object destructuring, es decir, me devuelve los servicios en cita\r\n    const { servicios } = cita; \r\n    // console.log(servicios) = servicios: Array [] \r\n    // length:0\r\n\r\n\r\n    // 4.Comprobar si un servicio ya fue agregado\r\n    // some recorre el arreglo de servicios y ejecuta un callback en cada iteración\r\n    // La función de callback recibe como argumento el elemento actual y su índice en el arreglo.\r\n    // entonces el callback es la condición a evaluar\r\n    if( servicios.some( elementoActualenServicios => elementoActualenServicios.id === id) ) { \r\n\r\n        // El servicio ya estaba agregado, es decir, lo debo eliminar\r\n        cita.servicios = servicios.filter( elementoActualenServicios => elementoActualenServicios.id !== id );\r\n\r\n    } else {\r\n        // El servicio no estaba agregado, es decir, lo debo agregar\r\n\r\n        // 3. Tomamos una copia del diccionario de servicios y le añadimos el nuevo servicio\r\n        // Es decir, similar a servicios += 1; \r\n        cita.servicios = [...servicios, servicio];\r\n        // Lo de arriba es lo mismo que: cita.servicios.push(servicio);\r\n\r\n        // Es muy importante lo de Object destructuring porque o si no \r\n        // JS da error al añadir servicio al arreglo\r\n        \r\n        // Ahora cita = { nombre: '', fecha: '', hora: '', \r\n        // servicios: [{ id: \"1\", nombre: \"Corte...\", precio: \"90.00\" }, { id: \"2\"...}, ...]\r\n    }\r\n\r\n    console.log(cita);\r\n}\r\n\r\nfunction nombreCliente() {\r\n    const nombre = document.querySelector('#nombre').value;\r\n    cita.nombre = nombre;\r\n}\r\n\r\nfunction idCliente() {\r\n    cita.id = document.querySelector('#id').value;;\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n\r\n    const inputFecha = document.querySelector('#fecha');\r\n\r\n    inputFecha.addEventListener('input', function (e) {\r\n\r\n        const dia = new Date(e.target.value).getUTCDay();  // Devuelve enteros del 0 al 6\r\n\r\n        if ( [6, 0].includes(dia)) { // Si es sabado(6) o domingo(0) entonces...\r\n            e.target.value = '';\r\n            mostrarAlerta('Solo abrimos entre semana, sorry', 'error', '.formulario');\r\n        } else {\r\n            cita.fecha = e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n\r\n    const inputHora = document.querySelector('#hora');\r\n\r\n    inputHora.addEventListener('input', function (e) {\r\n        const horaCita = e.target.value; // Retorna la hora en formato 24:00\r\n        const hora = horaCita.split(\":\")[0]; \r\n\r\n        if(hora < 9 || hora > 18) {\r\n            // horas no validas \r\n            e.target.value = '';\r\n            mostrarAlerta('El horario es de 9:00AM a 6:00PM', 'error', '.formulario');\r\n        } else {\r\n            cita.hora = horaCita;\r\n        }\r\n    });\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo, elemento, desaparece = true ) {\r\n    //Previene que se generen más de una alerta\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if(alertaPrevia) {\r\n        alertaPrevia.remove;\r\n    }\r\n\r\n    // Scripting para crear la alerta\r\n    const alerta = document.createElement('DIV');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n    alerta.classList.add(tipo);\r\n\r\n    const referencia = document.querySelector(elemento);\r\n    referencia.appendChild(alerta);\r\n\r\n    // Eliminar la alerta\r\n    if(desaparece) {\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 3000);\r\n    }\r\n}\r\n\r\nfunction obtenerFechaFormateada (fechaOriginal) {\r\n    // Formatear la fecha en español\r\n    const fechaObj = new Date(fechaOriginal);\r\n    const mes = fechaObj.getMonth();\r\n    const dia = fechaObj.getDate() + 1; // +1 porque tiene desfase de un día\r\n    const year = fechaObj.getFullYear();\r\n\r\n    const fechaUTC = new Date( Date.UTC(year, mes, dia + 1) );\r\n\r\n    const opciones = {weekday : 'long', year : 'numeric', month : 'long', day: 'numeric'};\r\n    const fechaFormateada = fechaUTC.toLocaleDateString('es-MX', opciones);\r\n\r\n    return fechaFormateada;\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    const resumen = document.querySelector('.contenido-resumen');\r\n\r\n    // Limpiar el contenido de resumen\r\n    while (resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    // Si hacen falta datos o servicios entonces...\r\n    if ( Object.values(cita).includes('') || cita.servicios.length === 0 ) {\r\n        mostrarAlerta('Faltan datos de Servicios, Fecha u Hora', 'error', '.contenido-resumen', false);\r\n        return;\r\n    }\r\n\r\n    const {servicios } = cita;\r\n   \r\n    // Heading para servicios en resumen\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = 'Resumen de Servicios';\r\n    resumen.appendChild(headingServicios);\r\n    \r\n    // Iterando y mostrando los servicios\r\n    servicios.forEach(servicio => {\r\n        const {id, precio, nombre} = servicio;\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio');\r\n\r\n        const textoServicio = document.createElement('P');\r\n        textoServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.innerHTML = `<span>Precio: </span>$${precio}`;\r\n        \r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        resumen.appendChild(contenedorServicio);\r\n    });\r\n\r\n    // Heading para Cita en resumen\r\n    const headingCita = document.createElement('H3');\r\n    headingCita.textContent = 'Resumen de Cita';\r\n    resumen.appendChild(headingCita);\r\n\r\n    const  { nombre, fecha, hora } = cita;\r\n\r\n    const nombreCliente = document.createElement('P');\r\n    nombreCliente.innerHTML = `<span>Nombre: </span> ${nombre}`;\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaFormateada = obtenerFechaFormateada(fecha);\r\n    fechaCita.innerHTML = `<span>Fecha: </span> ${fechaFormateada}`;\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora: </span> ${hora}`;\r\n    \r\n    resumen.appendChild(nombreCliente);\r\n    resumen.appendChild(fechaCita);\r\n    resumen.appendChild(horaCita);\r\n    \r\n    // Boton para crear una cita\r\n    const botonReservar = document.createElement('BUTTON');\r\n    botonReservar.classList.add('boton');\r\n    botonReservar.textContent = 'Reservar Cita';\r\n    botonReservar.onclick = reservarCita;\r\n\r\n    resumen.appendChild(botonReservar);\r\n}\r\n\r\nasync function reservarCita() {\r\n\r\n    const { fecha, hora, servicios, id } = cita;\r\n\r\n    // .map: Solo guarda las coincidencias en al vble idServicios\r\n    const idServicios = servicios.map( servicio => servicio.id );\r\n\r\n    // formData: Enviamos datos via $_POST a la API (a APIController.php) (es como el submit de un formulario)\r\n    const dataToSendViaPost = new FormData(); \r\n    \r\n    dataToSendViaPost.append('fecha', fecha);\r\n    dataToSendViaPost.append('hora', hora);\r\n    dataToSendViaPost.append('usuarioId', id);\r\n    dataToSendViaPost.append('servicios', idServicios);\r\n\r\n    //console.log([...datos]); // forma correcta de inspeccionar los datos enviados\r\n\r\n    // URL de la API (similar al action de un formulario)\r\n    const url = `${location.origin}/api/citas`;\r\n\r\n    // Thunder: Se necesita cambiar el localhost para probar con thunder\r\n    // const url = 'http://127.0.0.1:3000/api/citas' \r\n\r\n    try {\r\n\r\n        // Petición hacia la API\r\n        // Los datos son mandados a traves de $_POST\r\n        const response = await fetch( url, {\r\n            method : 'POST',\r\n            body : dataToSendViaPost \r\n        })\r\n    \r\n        // resultado_BD = resultado(bool) y $db->insert_id \r\n        const resultado_BD_JSON = await response.json();\r\n    \r\n        if(resultado_BD_JSON.resultado) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Cita Creada',\r\n                text: 'Tu cita fue creada correctamente, te enviaremos un correo con toda la info',\r\n                button: 'OK'\r\n            })\r\n                .then( () => {  //Callback para recargar la página\r\n                    setTimeout(() => {\r\n                        window.location.reload();\r\n                    }, 500); }) \r\n                \r\n        }\r\n    } catch(error) {\r\n\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: \"Error\",\r\n            text: 'Hubo un error al crear la cita',\r\n            button: 'OK'\r\n        })\r\n\r\n        console.log(error);\r\n    }\r\n}"]}